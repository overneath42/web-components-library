var h=Object.defineProperty;var p=(o,c,t)=>c in o?h(o,c,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[c]=t;var d=(o,c,t)=>p(o,typeof c!="symbol"?c+"":c,t);import{B as m}from"../shared/base-component.js";const f=`<div class="x-tabs">
  <ul class="x-tabs__list" role="tablist">
    <!-- Tab buttons will be dynamically generated here -->
  </ul>
  <div class="x-tabs__panels">
    <!-- Tab panels will be dynamically generated here -->
  </div>
</div>
`;function r(o,c=!1){return c?`.x-tabs--${o}`:`.x-tabs__${o}`}class T extends m{constructor(){super(...arguments);d(this,"currentTabIndex",0);d(this,"tabs",[]);d(this,"hideClass","hidden")}static get observedAttributes(){return["current-tab","hide-class"]}connectedCallback(){this.render(),this.setupTabs(),this.addEventListeners(),this.updateCurrentTab()}attributeChangedCallback(t,n,e){n!==e&&(t==="current-tab"&&(this.currentTabIndex=parseInt(e)||0,this.updateCurrentTab()),t==="hide-class"&&(this.hideClass=e||"hidden",this.updateCurrentTab()))}render(){super.render({template:f,componentName:"tabs-component",moduleUrl:import.meta.url})}setupTabs(){const t=this.querySelectorAll('[slot^="tab-"]');this.tabs=[],t.forEach((n,e)=>{const s=n,a=s.getAttribute("slot")||"",i=parseInt(a.replace("tab-",""))||e,l={label:s.dataset.label||`Tab ${i+1}`,id:`tab-${i}`,icon:s.dataset.icon,isVisible:s.dataset.visible!=="false",element:s};this.tabs[i]=l}),this.tabs=this.tabs.filter(n=>n!==void 0),this.renderTabList(),this.renderTabPanels()}renderTabList(){const t=this.shadow.querySelector(r("list"));t&&(t.innerHTML="",this.tabs.forEach((n,e)=>{if(!n.isVisible)return;const s=document.createElement("li");s.className=r("list-item").slice(1),s.setAttribute("role","presentation");const a=document.createElement("button");a.className=r("button").slice(1);const i={type:"button",role:"tab",id:`${n.id}-tab`,"aria-controls":n.id,"aria-selected":(e===this.currentTabIndex).toString(),tabindex:e===this.currentTabIndex?"0":"-1"};if(Object.entries(i).forEach(([b,u])=>{a.setAttribute(b,u)}),n.icon){const b=document.createElement("span");b.className=r("icon").slice(1),b.innerHTML=n.icon,a.appendChild(b)}const l=document.createElement("span");l.className=r("label").slice(1),l.textContent=n.label,a.appendChild(l),s.appendChild(a),t.appendChild(s)}))}renderTabPanels(){const t=this.shadow.querySelector(r("panels"));t&&(t.innerHTML="",this.tabs.forEach((n,e)=>{const s=document.createElement("div");s.className=r("panel").slice(1),Object.entries({role:"tabpanel",id:n.id,"aria-labelledby":`${n.id}-tab`,tabindex:"0"}).forEach(([i,l])=>{s.setAttribute(i,l)});const a=document.createElement("slot");a.setAttribute("name",`tab-${e}`),s.appendChild(a),t.appendChild(s)}))}addEventListeners(){this.shadow.addEventListener("click",this.handleTabClick.bind(this)),this.shadow.addEventListener("keydown",t=>{this.handleKeyDown(t)})}handleTabClick(t){const e=t.target.closest(r("button"));if(!e)return;const s=e.getAttribute("aria-controls"),a=this.tabs.findIndex(i=>i.id===s);a!==-1&&this.setCurrentTab(a)}handleKeyDown(t){const n=t.target;if(!n.classList.contains(r("button").slice(1)))return;const e=this.tabs.filter(i=>i.isVisible),s=e.findIndex(i=>i.id===n.getAttribute("aria-controls"));let a=s;switch(t.key){case"ArrowLeft":case"ArrowUp":t.preventDefault(),a=s>0?s-1:e.length-1;break;case"ArrowRight":case"ArrowDown":t.preventDefault(),a=s<e.length-1?s+1:0;break;case"Home":t.preventDefault(),a=0;break;case"End":t.preventDefault(),a=e.length-1;break;case"Enter":case" ":t.preventDefault();const i=this.tabs.findIndex(l=>l.id===n.getAttribute("aria-controls"));i!==-1&&this.setCurrentTab(i);return}if(a!==s){this.tabs.findIndex(l=>l.id===e[a].id);const i=this.shadow.querySelector(`#${e[a].id}-tab`);i&&i.focus()}}setCurrentTab(t){if(t<0||t>=this.tabs.length||!this.tabs[t].isVisible)return;const n=this.currentTabIndex;this.currentTabIndex=t,this.setAttribute("current-tab",t.toString()),this.updateCurrentTab(),this.dispatchEvent(new CustomEvent("x-tabs:change",{detail:{previousIndex:n,currentIndex:t,currentTab:this.tabs[t]},bubbles:!0}))}updateCurrentTab(){this.shadow.querySelectorAll(r("button")).forEach((e,s)=>{const a=s===this.currentTabIndex;e.setAttribute("aria-selected",a.toString()),e.setAttribute("tabindex",a?"0":"-1"),a?e.classList.add(r("button",!0).slice(1)):e.classList.remove(r("button",!0).slice(1))}),this.shadow.querySelectorAll(r("panel")).forEach((e,s)=>{s===this.currentTabIndex?(e.classList.remove(this.hideClass),e.removeAttribute("hidden")):(e.classList.add(this.hideClass),e.setAttribute("hidden",""))})}getCurrentTab(){return this.currentTabIndex}getTabCount(){return this.tabs.filter(t=>t.isVisible).length}switchToTab(t){this.setCurrentTab(t)}}customElements.define("x-tabs",T);
