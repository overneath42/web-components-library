var o=Object.defineProperty;var n=(i,t,e)=>t in i?o(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var r=(i,t,e)=>n(i,typeof t!="symbol"?t+"":t,e);import{B as a}from"../shared/base-component.js";const c=`<div class="x-alert">
  <slot></slot>
  <button class="x-alert__close" aria-label="Close" hidden>&times;</button>
</div>
`;class d extends a{constructor(){super(...arguments);r(this,"timerId",null)}static get observedAttributes(){return["type","closeable","self-destruct-in"]}connectedCallback(){this.render(),this.applyTypeStyles(),this.setupDestructTimer(),this.setCloseButtonVisibility()}attributeChangedCallback(e,s,l){s!==l&&(e==="type"&&this.applyTypeStyles(),e==="self-destruct-in"&&this.setupDestructTimer(),e==="closeable"&&this.setCloseButtonVisibility())}render(){var e;super.render({template:c,componentName:"alert-component",moduleUrl:import.meta.url}),(e=this.shadow.querySelector(".close"))==null||e.addEventListener("click",()=>this.remove())}setCloseButtonVisibility(){const e=this.shadow.querySelector(".x-alert__close");e&&(e.hidden=!this.hasAttribute("closeable"),e.hidden?e.removeEventListener("click",()=>this.remove()):e.addEventListener("click",()=>this.remove()))}applyTypeStyles(){const e=this.shadow.querySelector(".x-alert");if(!e)return;const s=this.getAttribute("type")||"info";e.className="x-alert",e.classList.add(`x-alert--${s}`)}setupDestructTimer(){this.timerId&&clearTimeout(this.timerId);const e=this.getAttribute("self-destruct-in");if(e){const s=parseInt(e,10);!isNaN(s)&&s>0&&(this.timerId=window.setTimeout(()=>this.remove(),s*1e3))}}}customElements.define("x-alert",d);
